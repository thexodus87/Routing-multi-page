{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Burak\\\\multi-page\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\n// EventDetailPage.js\n\nimport { useRouteLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  if (!data || !data.event) {\n    // data veya data.event yoksa bir hata işleme stratejisi belirleyebilirsiniz\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hata: Etkinlik bulunamad\\u0131.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Seçtiğiniz etkinlik bulunamadı.'\n    }, {\n      status: 500\n    });\n  } else {\n    const eventData = await response.json();\n    return {\n      event: eventData\n    }; // Veriyi { event: ... } şeklinde döndür\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","eventData","$RefreshReg$"],"sources":["C:/Users/Burak/multi-page/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["// EventDetailPage.js\r\n\r\nimport { useRouteLoaderData, json } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n  const data = useRouteLoaderData('event-detail');\r\n\r\n  if (!data || !data.event) {\r\n    // data veya data.event yoksa bir hata işleme stratejisi belirleyebilirsiniz\r\n    return <div>Hata: Etkinlik bulunamadı.</div>;\r\n  }\r\n\r\n  return <EventItem event={data.event} />;\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n  if (!response.ok) {\r\n    throw json({ message: 'Seçtiğiniz etkinlik bulunamadı.' }, { status: 500 });\r\n  } else {\r\n    const eventData = await response.json();\r\n    return { event: eventData }; // Veriyi { event: ... } şeklinde döndür\r\n  }\r\n}\r\n"],"mappings":";;AAAA;;AAEA,SAASA,kBAAkB,EAAEC,IAAI,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAE/C,IAAI,CAACO,IAAI,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;IACxB;IACA,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9C;EAEA,oBAAOT,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACP,EAAA,CATQD,eAAe;EAAA,QACTL,kBAAkB;AAAA;AAAAc,EAAA,GADxBT,eAAe;AAWxB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMrB,IAAI,CAAC;MAAEsB,OAAO,EAAE;IAAkC,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC7E,CAAC,MAAM;IACL,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACnB,IAAI,CAAC,CAAC;IACvC,OAAO;MAAEO,KAAK,EAAEiB;IAAU,CAAC,CAAC,CAAC;EAC/B;AACF;AAAC,IAAAX,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}