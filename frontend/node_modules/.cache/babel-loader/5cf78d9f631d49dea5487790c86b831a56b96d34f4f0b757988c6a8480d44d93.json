{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Burak\\\\multi-page\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 11\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Seçtiğiniz etkinlik bulunamadı.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Etkinlik Silinmedi.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","method","$RefreshReg$"],"sources":["C:/Users/Burak/multi-page/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData, json, redirect } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailPage() {\r\n  const data = useRouteLoaderData('event-detail');\r\n \r\n  return  <EventItem event={data.event} />;\r\n  \r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader ({request, params}) {\r\n  const id = params.eventId;\r\n  const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n  if(!response.ok) {\r\n    throw json({message: 'Seçtiğiniz etkinlik bulunamadı.'}, {\r\n      status: 500,\r\n    })\r\n  } else {\r\n  return response;  \r\n  }\r\n \r\n}\r\n\r\nexport async function action({params, request} ) {\r\nconst eventId = params.eventId;\r\nconst response = await fetch('http://localhost8080/events/' + eventId, {\r\nmethod: request.method,\r\n});\r\nif(!response.ok) {\r\n  throw json({message: 'Etkinlik Silinmedi.'}, {\r\n    status: 500,\r\n  });\r\n}\r\nreturn redirect('/events');\r\n}"],"mappings":";;AAAA,SAASA,kBAAkB,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACrE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAQK,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE1C;AAACN,EAAA,CALQD,eAAe;EAAA,QACTN,kBAAkB;AAAA;AAAAc,EAAA,GADxBR,eAAe;AAOxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAE;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAC/C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAE;IAAiC,CAAC,EAAE;MACvDC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACP,OAAOJ,QAAQ;EACf;AAEF;AAEA,OAAO,eAAeK,MAAMA,CAAC;EAACR,MAAM;EAAED;AAAO,CAAC,EAAG;EACjD,MAAMG,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,GAAGF,OAAO,EAAE;IACvEO,MAAM,EAAEV,OAAO,CAACU;EAChB,CAAC,CAAC;EACF,IAAG,CAACN,QAAQ,CAACE,EAAE,EAAE;IACf,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAE;IAAqB,CAAC,EAAE;MAC3CC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;EACA,OAAOtB,QAAQ,CAAC,SAAS,CAAC;AAC1B;AAAC,IAAAY,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}