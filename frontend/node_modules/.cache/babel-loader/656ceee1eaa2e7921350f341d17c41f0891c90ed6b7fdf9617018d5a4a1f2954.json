{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Burak\\\\multi-page\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n  //NewEventPage sayfasında, bir form gösterilir ve kullanıcı bir etkinlik eklemek için bu formu doldurur.\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  //Form submit edildiğinde, action fonksiyonu çağrılır. Bu fonksiyon, form verilerini alır ve bu verilerle bir POST isteği yapar.\n  // fetch isteği\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw {\n      message: 'Etkinlik Kaydedilmedi'\n    }, {\n      status: 500\n    };\n  }\n  return redirect('/events');\n\n  //Eğer POST isteği başarılı olursa, kullanıcıyı /events sayfasına yönlendirir.\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Users/Burak/multi-page/12-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nfunction NewEventPage() {\r\n  return <EventForm />;\r\n  //NewEventPage sayfasında, bir form gösterilir ve kullanıcı bir etkinlik eklemek için bu formu doldurur.\r\n}\r\n\r\nexport default NewEventPage\r\n\r\n\r\n\r\nexport async function action ({request, params}) {\r\n\r\n  const data = await request.formData();\r\n\r\n  const eventData = {\r\n    title: data.get('title'),\r\n    image: data.get('image'),\r\n    date: data.get('date'),\r\n    description: data.get('description'),\r\n  }\r\n//Form submit edildiğinde, action fonksiyonu çağrılır. Bu fonksiyon, form verilerini alır ve bu verilerle bir POST isteği yapar.\r\n // fetch isteği\r\nconst response = await fetch('http://localhost:8080/events', {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify(eventData),\r\n});\r\n\r\nif (!response.ok){\r\nthrow({message: 'Etkinlik Kaydedilmedi'}, {status: 500})\r\n} return redirect('/events'); \r\n\r\n//Eğer POST isteği başarılı olursa, kullanıcıyı /events sayfasına yönlendirir.\r\n}\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EACtB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACpB;AACF;AAACC,EAAA,GAHQL,YAAY;AAKrB,eAAeA,YAAY;AAI3B,OAAO,eAAeM,MAAMA,CAAE;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAE/C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EACH;EACC;EACD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAC;IACjB,MAAM;MAACC,OAAO,EAAE;IAAuB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC;EACvD;EAAE,OAAO9B,QAAQ,CAAC,SAAS,CAAC;;EAE5B;AACA;AAAC,IAAAS,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}