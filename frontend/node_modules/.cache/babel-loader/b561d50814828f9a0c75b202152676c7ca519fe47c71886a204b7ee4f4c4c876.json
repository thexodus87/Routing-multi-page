{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Burak\\\\multi-page\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    return {\n      isError: true,\n      message: 'Etkinliğe ulaşılamadı.'\n    };\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","$RefreshReg$"],"sources":["C:/Users/Burak/multi-page/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":[" import { useLoaderData } from \"react-router-dom\";\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nfunction EventsPage() {\r\n\r\n     const data = useLoaderData();\r\n     const events = data.events;\r\n    if (data.isError) {\r\n      return <p>{data.message}</p>;\r\n    }\r\n\r\n\r\n  return <EventsList events={events} />;\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader () {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) { \r\n      return {isError: true, message: 'Etkinliğe ulaşılamadı.'}         \r\n    } else {\r\n      return response;       \r\n    }\r\n  }\r\n"],"mappings":";;AAAC,SAASA,aAAa,QAAQ,kBAAkB;AAEjD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEjB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC5B,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC3B,IAAID,IAAI,CAACE,OAAO,EAAE;IAChB,oBAAOL,OAAA;MAAAM,QAAA,EAAIH,IAAI,CAACI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAC9B;EAGF,oBAAOX,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACT,EAAA,CAVQD,UAAU;EAAA,QAEDJ,aAAa;AAAA;AAAAe,EAAA,GAFtBX,UAAU;AAYnB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAI;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAO;MAACX,OAAO,EAAE,IAAI;MAAEE,OAAO,EAAE;IAAwB,CAAC;EAC3D,CAAC,MAAM;IACL,OAAOO,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}